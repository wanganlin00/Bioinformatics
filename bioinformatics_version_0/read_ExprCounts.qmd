# 读取scRNA表达矩阵

## 文本格式csv

[下载胰腺scRNA-seq数据集：GSE85241_cellsystems_dataset_4donors_updated.csv.gz(HTTP)](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE85241)

```{r}
mat <- read_delim("data/OSCA/GSE85241_cellsystems_dataset_4donors_updated.csv")

mat <- as.matrix(mat)
dim(mat)
```

使用 scuttle 包中 `readSparseCounts()` 以稀疏格式(sparse format)读取，仅存储非零值，避免在低测序的scRNA-seq实验中将内存花费在大多数零上。

```{r}
sparse.mat <-
  scuttle::readSparseCounts("data/OSCA/GSE85241_cellsystems_dataset_4donors_updated.csv")
dim(sparse.mat)
```

```{r}
object.size(sparse.mat)
object.size(mat)
```

## 表格格式excel

[下载：GSE61533_HTSEQ_count_results.xls.gz(HTTP)](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE61533)

```{r}
all.counts <- readxl::read_excel("data/OSCA/GSE61533_HTSEQ_count_results.xls")
gene.names <- all.counts$ID
all.counts <- as.matrix(all.counts[,-1])
rownames(all.counts) <- gene.names
dim(all.counts)
```

## 10X Genomics /Cell Ranger

对于 10X Genomics 数据，Cell Ranger 软件套件将生成一个包含计数和特征/条形码注释的输出目录。[下载：Gene / cell matrix (filtered)](https://support.10xgenomics.com/single-cell-gene-expression/datasets/2.1.0/pbmc4k)

```{r}
# BiocManager::install("DropletUtils")
sce <- DropletUtils::read10xCounts("data/OSCA/pbmc4k_filtered_gene_bc_matrices/filtered_gene_bc_matrices/GRCh38")
sce
```

通过将多个目录路径传递给`read10xCounts()`来读取多个计数矩阵。如果所有数据集都具有相同的基因注释，则该函数将能够将它们组合到单个对象中。

```{r}
dirA <- "data/OSCA/pbmc4k_filtered_gene_bc_matrices/filtered_gene_bc_matrices/GRCh38"
dirB <- "data/OSCA/filtered_gene_bc_matrices - 副本/GRCh38" #复制 
sce <- DropletUtils::read10xCounts(c(dirA, dirB))
sce
```

## HDF5 格式

一系列scRNA-seq存储格式基于分层数据格式第5版（HDF5）,无需将所有数据读入 R 即可进行基于bioconductor的分析,这使得在计算机内存有限的情况下分析非常大的数据集。 这些格式能够在同一文件中存储表达值以及相关的基因和细胞注释。例如：[Gene / cell matrix HDF5 (raw)](https://support.10xgenomics.com/single-cell-gene-expression/datasets/2.1.0/pbmc4k)

一种是 H5AD 格式。

```{r}
# BiocManager::install("zellkonverter")
demo <- system.file("extdata", "krumsiek11.h5ad", package = "zellkonverter")
sce <- zellkonverter::readH5AD(demo)
sce
```

另一种是 Loom 格式

```{r}
# BiocManager::install("LoomExperiment")
demo <- system.file("extdata", "L1_DRG_20_example.loom", package = "LoomExperiment")
scle <- LoomExperiment::import(demo, type="SingleCellLoomExperiment")
scle
```
